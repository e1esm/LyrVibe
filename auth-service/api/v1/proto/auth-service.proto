syntax = "proto3";
package auth.api.v1.proto;
import "google/protobuf/empty.proto";
import "validate/validate.proto";
option go_package = "github.com/e1esm/LyrVibe/auth-service/api/v1/proto";


message SignUpRequest{
  string username = 1 [(validate.rules).string = {pattern: "(?i)^[A-Za-z0-9_]+$", min_len: 4, max_len: 10}];
  string password = 2 [(validate.rules).string.min_len = 5];
  string role = 3 [(validate.rules).string = {in: ["Guest"]}];
  bytes image = 5;
}

message SignUpResponse{
  RequestStatus status = 1;
  string username = 2;
}

message SignInRequest{
  string username = 1 [(validate.rules).string = {pattern: "(?i)^[A-Za-z0-9_]+$", min_len: 4, max_len: 10}];;
  string password = 2 [(validate.rules).string.min_len = 5];
}

message SignInResponse{
  RequestStatus status = 1;
  CachedTokens tokens = 2;
}

message CachedTokens{
  string AccessToken = 1;
  string AccessTTL = 2;
  string RefreshToken = 3;
  string RefreshTTL = 4;
}

message RequestStatus{
  string requestStatus = 1;
  string errorMessage = 2;
}

message LogoutRequest{
  string access_token = 1;
}

message IdentifyRequest{
  string access_token = 1;
}
message IdentifyResponse{
  string user_id = 1;
  string role = 2;
}

message UpdatingRoleRequest{
  string user_name = 1;
  string requestedRole = 2;
}

message UpdatingRoleResponse{
  string status = 2;
}

message VerificationRequest{
  string accessToken = 1;
}

message VerificationResponse{
  string role = 1;
  string id = 2;
  string username = 3;
}

message RefreshRequest{
  string refresh_token = 1;
}

message RefreshResponse{
  string access_token = 1;
  RequestStatus request_status = 2;

}

service AuthService{
  rpc SignUp(SignUpRequest) returns (SignUpResponse){};
  rpc SignIn(SignInRequest) returns (SignInResponse) {};
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty){};
  rpc UpdateRole(UpdatingRoleRequest) returns (UpdatingRoleResponse){};
  rpc Verification(VerificationRequest) returns(VerificationResponse){};
  rpc RefreshToken(RefreshRequest) returns (VerificationResponse){};
}