version: "3"
services:
  redis_sessions:
    container_name: redis_sessions
    ports:
      - "6379:6379"
    env_file:
      - auth-service/redis.env
    image: redis
    volumes:
      - cache:/data
  postgres_auth:
    container_name: postgres_auth
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    env_file:
      - ./auth-service/postgres.env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
  postgres_artists:
    container_name: postgres_artists
    image: postgres:latest
    env_file:
      - ./artist-service/postgres.env
    volumes:
      - postgres_artist_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
  postgres_music:
    container_name: postgres_music
    image: postgres:latest
    env_file:
      - ./music-service/postgres.env
    volumes:
      - postgres_music_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
  music_service:
    build:
      context: .
      dockerfile: music-service/Dockerfile
    container_name: music_service
  auth_service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth_service
  artist_service:
    build:
      context: .
      dockerfile: ./artist-service/Dockerfile
    container_name: artist_service
  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    container_name: gateway
    ports:
      - "8082:8080"


volumes:
  cache:
  postgres_auth_data:
  postgres_artist_data:
  postgres_music_data:

