syntax = "proto3";
package music.api.v1.proto;
import "validate/validate.proto";
option go_package = "github.com/e1esm/LyrVibe/music-service/api/v1/proto";

enum Genre{
  HipHop = 0;
  Rock = 1;
  Electronic = 2;
  Metal = 3;
  Alternative = 4;
  Pop = 5;
  Reggae = 6;
  Folk = 7;
  Vocal = 8;
  Blues = 9;
  Jazz = 10;
  Classical = 11;
  Soundtrack = 12;
}

enum Status{
  OK = 0;
}

message NewTrackRequest{
  repeated string lyrics = 1;
  bytes cover = 2 [(validate.rules).bytes.min_len = 1];
  string title = 3 [(validate.rules).string = {pattern: "(?i)^[A-Za-z0-9]+$", min_len: 1, max_len: 50}];
  string release_date = 4;
  Genre genre = 5 [(validate.rules).enum.defined_only = true];
  string duration = 6 [(validate.rules).string = {pattern: "^([0-9]+[mM])?([0-9]+[sS])?$"}];
  string country = 7 [(validate.rules).string = {pattern: "(?i)^[A-Za-z]+$", min_len: 1, max_len: 50}];
  string video_link = 8;
  repeated string feature = 9;
  string artist_id = 10;
}


message NewTrackResponse{
  string title = 1;
  Status status = 2;
}

message NewAlbumRequest{
  string title = 1 [(validate.rules).string.min_len = 1];
  repeated NewTrackRequest tracks = 2 [(validate.rules).repeated.min_items = 1];
}


message NewAlbumResponse{
  string title = 1;
  Status status = 2;
}

message RequestStatus{
  Status status = 1;
}

message DeleteResponse{
  string title = 1;
  uint64 views = 2;
}

message DeleteRequest{
  string title = 1;
  string author_id = 2;
}


service MusicService{
  rpc AddNewTrack(NewTrackRequest) returns (NewTrackResponse);
  rpc DeleteTrack(DeleteRequest) returns (DeleteResponse);
  rpc AddNewAlbum(NewAlbumRequest) returns (NewAlbumResponse);
}

